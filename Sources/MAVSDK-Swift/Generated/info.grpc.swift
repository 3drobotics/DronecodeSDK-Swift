//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: info.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Mavsdk_Rpc_Info_InfoServiceGetVersionCall: ClientCallUnary {}

fileprivate final class Mavsdk_Rpc_Info_InfoServiceGetVersionCallBase: ClientCallUnaryBase<Mavsdk_Rpc_Info_GetVersionRequest, Mavsdk_Rpc_Info_GetVersionResponse>, Mavsdk_Rpc_Info_InfoServiceGetVersionCall {
  override class var method: String { return "/mavsdk.rpc.info.InfoService/GetVersion" }
}


/// Instantiate Mavsdk_Rpc_Info_InfoServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol Mavsdk_Rpc_Info_InfoServiceService: ServiceClient {
  /// Synchronous. Unary.
  func getVersion(_ request: Mavsdk_Rpc_Info_GetVersionRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Info_GetVersionResponse
  /// Asynchronous. Unary.
  @discardableResult
  func getVersion(_ request: Mavsdk_Rpc_Info_GetVersionRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Info_GetVersionResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Info_InfoServiceGetVersionCall

}

internal extension Mavsdk_Rpc_Info_InfoServiceService {
  /// Synchronous. Unary.
  func getVersion(_ request: Mavsdk_Rpc_Info_GetVersionRequest) throws -> Mavsdk_Rpc_Info_GetVersionResponse {
    return try self.getVersion(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getVersion(_ request: Mavsdk_Rpc_Info_GetVersionRequest, completion: @escaping (Mavsdk_Rpc_Info_GetVersionResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Info_InfoServiceGetVersionCall {
    return try self.getVersion(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Mavsdk_Rpc_Info_InfoServiceServiceClient: ServiceClientBase, Mavsdk_Rpc_Info_InfoServiceService {
  /// Synchronous. Unary.
  internal func getVersion(_ request: Mavsdk_Rpc_Info_GetVersionRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Info_GetVersionResponse {
    return try Mavsdk_Rpc_Info_InfoServiceGetVersionCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getVersion(_ request: Mavsdk_Rpc_Info_GetVersionRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Info_GetVersionResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Info_InfoServiceGetVersionCall {
    return try Mavsdk_Rpc_Info_InfoServiceGetVersionCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

class Mavsdk_Rpc_Info_InfoServiceGetVersionCallTestStub: ClientCallUnaryTestStub, Mavsdk_Rpc_Info_InfoServiceGetVersionCall {
  override class var method: String { return "/mavsdk.rpc.info.InfoService/GetVersion" }
}

class Mavsdk_Rpc_Info_InfoServiceServiceTestStub: ServiceClientTestStubBase, Mavsdk_Rpc_Info_InfoServiceService {
  var getVersionRequests: [Mavsdk_Rpc_Info_GetVersionRequest] = []
  var getVersionResponses: [Mavsdk_Rpc_Info_GetVersionResponse] = []
  func getVersion(_ request: Mavsdk_Rpc_Info_GetVersionRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Info_GetVersionResponse {
    getVersionRequests.append(request)
    defer { getVersionResponses.removeFirst() }
    return getVersionResponses.first!
  }
  @discardableResult
  func getVersion(_ request: Mavsdk_Rpc_Info_GetVersionRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Info_GetVersionResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Info_InfoServiceGetVersionCall {
    let response = try self.getVersion(request)
    let callResult = CallResult(success: true, statusCode: .ok, statusMessage: "OK", resultData: nil, initialMetadata: nil, trailingMetadata: nil)
    completion(response, callResult)
    return Mavsdk_Rpc_Info_InfoServiceGetVersionCallTestStub()
  }

}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
internal protocol Mavsdk_Rpc_Info_InfoServiceProvider: ServiceProvider {
  func getVersion(request: Mavsdk_Rpc_Info_GetVersionRequest, session: Mavsdk_Rpc_Info_InfoServiceGetVersionSession) throws -> Mavsdk_Rpc_Info_GetVersionResponse
}

extension Mavsdk_Rpc_Info_InfoServiceProvider {
  internal var serviceName: String { return "mavsdk.rpc.info.InfoService" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  internal func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/mavsdk.rpc.info.InfoService/GetVersion":
      return try Mavsdk_Rpc_Info_InfoServiceGetVersionSessionBase(
        handler: handler,
        providerBlock: { try self.getVersion(request: $0, session: $1 as! Mavsdk_Rpc_Info_InfoServiceGetVersionSessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

internal protocol Mavsdk_Rpc_Info_InfoServiceGetVersionSession: ServerSessionUnary {}

fileprivate final class Mavsdk_Rpc_Info_InfoServiceGetVersionSessionBase: ServerSessionUnaryBase<Mavsdk_Rpc_Info_GetVersionRequest, Mavsdk_Rpc_Info_GetVersionResponse>, Mavsdk_Rpc_Info_InfoServiceGetVersionSession {}

class Mavsdk_Rpc_Info_InfoServiceGetVersionSessionTestStub: ServerSessionUnaryTestStub, Mavsdk_Rpc_Info_InfoServiceGetVersionSession {}

